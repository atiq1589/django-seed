# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-15 05:37
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='Creation Date.', verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, help_text='Last Update.', verbose_name='Date Updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique Identifier For The System User.', unique=True, verbose_name='Unique Identifier')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 254 Characters or Fewer. Letters, Digits And @/./+/-/_ Only.', max_length=254, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter A Valid Username. This Value May Contain Only Letters, Numbers And @/./+/-/_ Characters.')], verbose_name='Username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates That User Should Be Treated as Active In All The Tenant.', verbose_name='Active')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates That User Able To Login Or Not.', verbose_name='Staff Status')),
                ('created_by', models.ForeignKey(blank=True, help_text='User Who Create This Record', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('updated_by', models.ForeignKey(blank=True, help_text='User Who Last Update This Record', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user_users',
            },
        ),
    ]
